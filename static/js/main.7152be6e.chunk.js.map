{"version":3,"sources":["store/initialState.js","helpers/getExchangeRate.js","actions/actions.js","actions/actionTypes.js","api/fetchCurrentRates.js","sagas/fetchCurrentRatesSaga.js","store/store.js","reducers/reducers.js","reducers/buyOrSellAmountReducer.js","reducers/exchangeReducer.js","reducers/swapCurrencyReducer.js","reducers/changeCurrencyReducer.js","reducers/updateRatesReducer.js","reducers/showToastReducer.js","helpers/formatNumber.js","components/CurrencyComponent.js","components/CurrencyListComponent.js","components/WidgetLayoutComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","changeCurrencyDialog","open","wallet","currency","balance","selectedExchangeCurrencies","sell","amount","buy","currencyRates","base","rates","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLF","CLP","CNH","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XCD","XDR","XOF","XPD","XPF","XPT","YER","ZAR","ZMW","ZWL","getExchangeRate","from","to","fromRate","updateRatesAction","type","payload","showToastAction","message","refreshAmountsActions","openExchangeUrl","concat","process","fetchCurrentRates","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","sent","ok","Error","statusText","json","abrupt","stop","apply","this","arguments","poll","data","call","put","t0","delay","_marked","fetchCurrentRatesSaga","watch","_context2","sagaMiddleware","createSagaMiddleware","store","createStore","state","length","undefined","action","objectSpread","buyOrSellAmountReducer","buyCurrency","find","sellCurrency","toConsumableArray","filter","c","exchangeReducer","swapCurrencyReducer","buyOrSell","currentCurrency","showChangeCurrencyReducer","_selectedExchangeCurr","currentSelectedExchangeCurrencies","otherCurrencyMode","shouldSwap","defineProperty","changeCurrencyReducer","updateRatesReducer","toastMessage","showToastReducer","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","run","formatMax2Decimal","n","num","parseFloat","isNaN","isFinite","e","p","Math","round","precision","toFixed","toString","CurrencyComponent","props","symbol","getSymbolFromCurrency","notEnoughBalance","react_default","createElement","className","onClick","onCurrencyClick","keyboard_arrow_down_default","react_contenteditable_default","html","onChange","event","striphtml","target","value","CurrencyItem","List","selected","icon","dashboard_default","check_default","CurrencyListComponent","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","onCurrencyChange","setState","other","onOtherClick","inherits","createClass","key","nextProps","_this2","Dialog","map","CurrencyListComponent_CurrencyItem","assign","globe_default","availableCurrencies","Component","noop","WidgetLayoutConnected","connect","sellWallet","buyWallet","exchangeDisabled","currentRate","keys","dispatch","onSellAmountChange","onBuyAmountChange","onExchangeClick","onSwapClick","onShowCurrencyClick","currencyCurrency","actions","buySymbol","sellSymbol","style","height","width","fontSize","close_default","trending_up_default","CurrencyComponent_CurrencyComponent","swap_vert_default","margin","Button_default","disabled","raised","accent","CurrencyListComponent_CurrencyListComponent","Snackbar_default","active","onTimeout","App","es","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7152be6e.chunk.js","sourcesContent":["export const initialState = {\n  changeCurrencyDialog: {\n    open: false,\n  },\n  wallet: [{\n    currency: 'GBP',\n    balance: 50.00,\n  }, {\n    currency: 'EUR',\n    balance: 27.43,\n  }, {\n    currency: 'USD',\n    balance: 121.12,\n  }],\n  selectedExchangeCurrencies: {\n    sell: { currency: 'GBP', amount: 10 },\n    buy: { currency: 'EUR', amount: 10 * (0.813206 / 0.715835) },\n  },\n  currencyRates: {\n    'base': 'USD',\n    'rates': {\n      'AED': 3.673097,\n      'AFN': 69.4945,\n      'ALL': 107.365,\n      'AMD': 481.215,\n      'ANG': 1.786743,\n      'AOA': 213.042,\n      'ARS': 19.9645,\n      'AUD': 1.275673,\n      'AWG': 1.7875,\n      'AZN': 1.68825,\n      'BAM': 1.590833,\n      'BBD': 2,\n      'BDT': 83.111255,\n      'BGN': 1.59055,\n      'BHD': 0.37692,\n      'BIF': 1761.3,\n      'BMD': 1,\n      'BND': 1.320806,\n      'BOB': 6.916616,\n      'BRL': 3.2385,\n      'BSD': 1,\n      'BTC': 0.000102136487,\n      'BTN': 64.818642,\n      'BWP': 9.483549,\n      'BYN': 1.96136,\n      'BZD': 2.011957,\n      'CAD': 1.26325,\n      'CDF': 1615,\n      'CHF': 0.936785,\n      'CLF': 0.02255,\n      'CLP': 590.5,\n      'CNH': 6.325806,\n      'CNY': 6.33585,\n      'COP': 2862,\n      'CRC': 570.705,\n      'CUC': 1,\n      'CUP': 25.5,\n      'CVE': 89.9,\n      'CZK': 20.63295,\n      'DJF': 177.1,\n      'DKK': 6.0551,\n      'DOP': 49.304213,\n      'DZD': 114.323,\n      'EGP': 17.6885,\n      'ERN': 15.096667,\n      'ETB': 27.437924,\n      'EUR': 0.813206,\n      'FJD': 2.024752,\n      'FKP': 0.715835,\n      'GBP': 0.715835,\n      'GEL': 2.465598,\n      'GGP': 0.715835,\n      'GHS': 4.466786,\n      'GIP': 0.715835,\n      'GMD': 47.15,\n      'GNF': 9034.7,\n      'GTQ': 7.372036,\n      'GYD': 207.302607,\n      'HKD': 7.8235,\n      'HNL': 23.672154,\n      'HRK': 6.044828,\n      'HTG': 64.38371,\n      'HUF': 254.55,\n      'IDR': 13647.213837,\n      'ILS': 3.48678,\n      'IMP': 0.715835,\n      'INR': 64.899,\n      'IQD': 1193.2,\n      'IRR': 37194.927157,\n      'ISK': 100.526713,\n      'JEP': 0.715835,\n      'JMD': 126.601855,\n      'JOD': 0.709503,\n      'JPY': 106.89473925,\n      'KES': 101.900143,\n      'KGS': 68.011027,\n      'KHR': 4020.35,\n      'KMF': 400.625,\n      'KPW': 900,\n      'KRW': 1076.85,\n      'KWD': 0.299883,\n      'KYD': 0.834126,\n      'KZT': 320.31,\n      'LAK': 8293.45,\n      'LBP': 1516.95,\n      'LKR': 155.329218,\n      'LRD': 129.95,\n      'LSL': 11.619433,\n      'LYD': 1.336201,\n      'MAD': 9.214018,\n      'MDL': 16.659822,\n      'MGA': 3133.2,\n      'MKD': 50.143265,\n      'MMK': 1342.3,\n      'MNT': 2394.616273,\n      'MOP': 8.065821,\n      'MRO': 356,\n      'MRU': 35.25,\n      'MUR': 33.048,\n      'MVR': 15.460011,\n      'MWK': 725.44,\n      'MXN': 18.54124,\n      'MYR': 3.918497,\n      'MZN': 60.994761,\n      'NAD': 11.545,\n      'NGN': 360.84,\n      'NIO': 31.156741,\n      'NOK': 7.8488,\n      'NPR': 103.701541,\n      'NZD': 1.37146,\n      'OMR': 0.384977,\n      'PAB': 1,\n      'PEN': 3.24925,\n      'PGK': 3.247053,\n      'PHP': 51.812333,\n      'PKR': 110.87,\n      'PLN': 3.39475,\n      'PYG': 5593,\n      'QAR': 3.641996,\n      'RON': 3.784463,\n      'RSD': 95.882433,\n      'RUB': 56.3072,\n      'RWF': 864.46,\n      'SAR': 3.75,\n      'SBD': 7.760973,\n      'SCR': 13.469883,\n      'SDG': 18.114447,\n      'SEK': 8.1708,\n      'SGD': 1.3199,\n      'SHP': 0.715835,\n      'SLL': 7685.264103,\n      'SOS': 579.035,\n      'SRD': 7.468,\n      'SSP': 130.2634,\n      'STD': 19923.181155,\n      'STN': 19.99,\n      'SVC': 8.758316,\n      'SYP': 514.98999,\n      'SZL': 11.612574,\n      'THB': 31.3985,\n      'TJS': 8.832033,\n      'TMT': 3.50998,\n      'TND': 2.404295,\n      'TOP': 2.207435,\n      'TRY': 3.789181,\n      'TTD': 6.736586,\n      'TWD': 29.255,\n      'TZS': 2252.6,\n      'UAH': 26.990059,\n      'UGX': 3663.5,\n      'USD': 1,\n      'UYU': 28.494716,\n      'UZS': 8190.6,\n      'VEF': 24985,\n      'VND': 22729.928226,\n      'VUV': 105.763108,\n      'WST': 2.494252,\n      'XAF': 533.428482,\n      'XAG': 0.06048768,\n      'XAU': 0.00075252,\n      'XCD': 2.70255,\n      'XDR': 0.689371,\n      'XOF': 533.428482,\n      'XPD': 0.00095443,\n      'XPF': 97.041346,\n      'XPT': 0.00100266,\n      'YER': 250.25,\n      'ZAR': 11.56164,\n      'ZMW': 9.784438,\n      'ZWL': 322.355011\n    }\n  }\n}","export const getExchangeRate = (from, to, currencyRates) => {\n  const fromRate = currencyRates.base === from ? 1 : currencyRates.rates[from];\n  const toRate = currencyRates.base === to ? 1 : currencyRates.rates[to];\n  return (toRate / fromRate);\n};","import {\n  CURRENCY_SELL_AMOUNT_CHANGE,\n  CURRENCY_BUY_AMOUNT_CHANGE,\n  EXCHANGE,\n  SWAP_CURRENCY,\n  SHOW_CHANGE_CURRENCY,\n  CHANGE_CURRENCY,\n  UPDATE_RATES,\n  SHOW_TOAST,\n  REFRESH_AMOUNTS,\n} from './actionTypes';\n\nexport const currencyFromAmountAction = (amount) => ({\n  type: CURRENCY_SELL_AMOUNT_CHANGE,\n  payload: {\n    amount\n  }\n});\n\nexport const currencyTomountAction = (amount) => ({\n  type: CURRENCY_BUY_AMOUNT_CHANGE,\n  payload: {\n    amount\n  }\n});\n\nexport const exchangeAction = () => ({\n  type: EXCHANGE,\n});\n\nexport const swapCurrencyAction = () => ({\n  type: SWAP_CURRENCY,\n});\n\nexport const showChangeCurrencyAction = (buyOrSell, currentCurrency) => ({\n  type: SHOW_CHANGE_CURRENCY,\n  payload: {\n    buyOrSell,\n    currentCurrency,\n  }\n});\n\nexport const changeCurrencyAction = (buyOrSell, currency) => ({\n  type: CHANGE_CURRENCY,\n  payload: {\n    buyOrSell,\n    currency,\n  }\n});\n\nexport const updateRatesAction = (currencyRates) => ({\n  type: UPDATE_RATES,\n  payload: currencyRates,\n});\n\nexport const showToastAction = (message) => ({\n  type: SHOW_TOAST,\n  payload: message,\n});\n\nexport const refreshAmountsActions = () => ({\n  type: REFRESH_AMOUNTS,\n});","export const CURRENCY_SELL_AMOUNT_CHANGE = 'CURRENCY_SELL_AMOUNT_CHANGE';\nexport const CURRENCY_BUY_AMOUNT_CHANGE = 'CURRENCY_BUY_AMOUNT_CHANGE';\nexport const EXCHANGE = 'EXCHANGE';\nexport const SWAP_CURRENCY = 'SWAP_CURRENCY';\nexport const SHOW_CHANGE_CURRENCY = 'SHOW_CHANGE_CURRENCY';\nexport const CHANGE_CURRENCY = 'CHANGE_CURRENCY';\nexport const UPDATE_RATES = 'UPDATE_RATES';\nexport const SHOW_TOAST = 'SHOW_TOAST';\nexport const REFRESH_AMOUNTS = 'REFRESH_AMOUNTS';","const openExchangeUrl = `https://openexchangerates.org/api/latest.json?app_id=${process.env.REACT_APP_OPENEXCHANGERATES_KEY}`;\n\nexport const fetchCurrentRates = async () => {\n  const response = await fetch(openExchangeUrl);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n};","import { call, put } from 'redux-saga/effects';\nimport { delay } from 'redux-saga';\nimport { updateRatesAction, showToastAction, refreshAmountsActions } from '../actions/actions';\nimport { fetchCurrentRates } from '../api/fetchCurrentRates';\n\nfunction* poll() {\n  try {    \n    const data = yield call(fetchCurrentRates);\n    yield put(updateRatesAction(data));\n    yield put(refreshAmountsActions());\n  } catch (e) {\n    yield put(showToastAction('Failed to fetch latest currency rates'));\n  }\n  yield call(delay, 10000);\n};\n\nexport const fetchCurrentRatesSaga = function* watch() {\n  while(true) {\n    yield call(poll);\n  }\n};","import { createStore, applyMiddleware } from 'redux';\nimport { reducer } from '../reducers/reducers';\nimport createSagaMiddleware from 'redux-saga'\nimport { fetchCurrentRatesSaga } from '../sagas/fetchCurrentRatesSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(fetchCurrentRatesSaga);","import {\n  CURRENCY_SELL_AMOUNT_CHANGE,\n  CURRENCY_BUY_AMOUNT_CHANGE,\n  EXCHANGE,\n  SWAP_CURRENCY,\n  SHOW_CHANGE_CURRENCY,\n  CHANGE_CURRENCY,\n  UPDATE_RATES,\n  SHOW_TOAST,\n  REFRESH_AMOUNTS,\n} from '../actions/actionTypes';\nimport { initialState } from '../store/initialState';\nimport { changeCurrencyReducer, showChangeCurrencyReducer } from './changeCurrencyReducer';\nimport { buyOrSellAmountReducer } from './buyOrSellAmountReducer';\nimport { exchangeReducer } from './exchangeReducer';\nimport { updateRatesReducer } from './updateRatesReducer';\nimport { swapCurrencyReducer } from './swapCurrencyReducer';\nimport { showToastReducer } from './showToastReducer';\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CURRENCY_SELL_AMOUNT_CHANGE:\n    case CURRENCY_BUY_AMOUNT_CHANGE:\n    case REFRESH_AMOUNTS:\n      return buyOrSellAmountReducer(state, action);\n    case EXCHANGE:\n      return exchangeReducer(state, action);\n    case SWAP_CURRENCY:\n      return swapCurrencyReducer(state, action);\n    case SHOW_CHANGE_CURRENCY:\n      return showChangeCurrencyReducer(state, action);\n    case CHANGE_CURRENCY:\n      return changeCurrencyReducer(state, action);\n    case UPDATE_RATES:\n      return updateRatesReducer(state, action);\n    case SHOW_TOAST:\n      return showToastReducer(state, action);\n    default:\n      return state;\n  }\n};","import { getExchangeRate } from '../helpers/getExchangeRate';\nimport {\n  CURRENCY_SELL_AMOUNT_CHANGE,\n  REFRESH_AMOUNTS,\n} from '../actions/actionTypes';\n\nexport const buyOrSellAmountReducer = (state, action) => {\n  const { selectedExchangeCurrencies, currencyRates } = state;\n  const { sell, buy } = selectedExchangeCurrencies;\n\n  const amount = action.type === REFRESH_AMOUNTS ? sell.amount : action.payload.amount;\n\n  if (action.type === CURRENCY_SELL_AMOUNT_CHANGE || action.type === REFRESH_AMOUNTS) {\n    return {\n      ...state,\n      selectedExchangeCurrencies: {\n        sell: {\n          ...sell,\n          amount: amount\n        },\n        buy: {\n          ...buy,\n          amount: amount * getExchangeRate(sell.currency, buy.currency, currencyRates)\n        },\n      }\n    };\n  } else {\n    return {\n      ...state,\n      selectedExchangeCurrencies: {\n        buy: {\n          ...buy,\n          amount: amount\n        },\n        sell: {\n          ...sell,\n          amount: amount * getExchangeRate(buy.currency, sell.currency, currencyRates)\n        },\n      }\n    }\n  }\n}","import find from 'lodash/find';\n\nexport const exchangeReducer = (state) => {\n  const { wallet, selectedExchangeCurrencies } = state;\n\n  // get wallet for buy currency, create new one with zero balance if no wallet for currency\n  const buyCurrency = find(wallet, {\n    currency: selectedExchangeCurrencies.buy.currency,\n  }) || { currency: selectedExchangeCurrencies.buy.currency, balance: 0 };\n\n  const sellCurrency = find(wallet, {\n    currency: selectedExchangeCurrencies.sell.currency,\n  }) || { currency: selectedExchangeCurrencies.sell.currency, balance: 0 };\n\n  // can't perform exchange if you have no balance\n  if (sellCurrency.balance === 0) {\n    return state;\n  }\n\n  return {\n    ...state,\n    wallet: [{\n      ...buyCurrency,\n      // update balance of buy currency\n      balance: buyCurrency.balance + selectedExchangeCurrencies.buy.amount,\n    }, {\n      ...sellCurrency,\n      // update balance of sell currency\n      balance: sellCurrency.balance - selectedExchangeCurrencies.sell.amount,\n    },\n    ...wallet.filter(c => c.currency !== buyCurrency.currency && c.currency !== sellCurrency.currency)\n    ]\n  };\n};","export const swapCurrencyReducer = (state) => {\n  return {\n    ...state,\n    selectedExchangeCurrencies: {\n      buy: state.selectedExchangeCurrencies.sell,\n      sell: state.selectedExchangeCurrencies.buy,\n    }\n  };\n};","export const changeCurrencyReducer = (state, action) => {\n  const { selectedExchangeCurrencies: currentSelectedExchangeCurrencies } = state;\n\n  // if currency is already selected then simply close the dialog\n  if (currentSelectedExchangeCurrencies[action.payload.buyOrSell].currency === action.payload.currency) {\n    return {\n      ...state,\n      changeCurrencyDialog: {\n        open: false,\n      }\n    };\n  }\n\n  const otherCurrencyMode = action.payload.buyOrSell === 'buy' ? 'sell' : 'buy';\n\n  // if opposite currency is selected we can perform a swap\n  // otherwise we zero out the currency exchange amounts\n  const shouldSwap = currentSelectedExchangeCurrencies[otherCurrencyMode].currency === action.payload.currency\n  const selectedExchangeCurrencies = {\n    [action.payload.buyOrSell]: shouldSwap ? currentSelectedExchangeCurrencies[otherCurrencyMode] : {\n      currency: action.payload.currency,\n      amount: 0\n    },\n    [otherCurrencyMode]: shouldSwap ? currentSelectedExchangeCurrencies[action.payload.buyOrSell]  : {\n      ...currentSelectedExchangeCurrencies[otherCurrencyMode],\n      amount: 0\n    },\n  }\n\n  return {\n    ...state,\n    selectedExchangeCurrencies,\n    changeCurrencyDialog: {\n      open: false,\n    },\n  };\n}\n\nexport const showChangeCurrencyReducer = (state, action) => {\n  return {\n    ...state,\n    changeCurrencyDialog: {\n      open: true,\n      buyOrSell: action.payload.buyOrSell,\n      currentCurrency: action.payload.currentCurrency,\n    },\n  };\n};","export const updateRatesReducer = (state, action) => {\n  return {\n    ...state,\n    currencyRates: action.payload,\n  };\n}","export const showToastReducer = (state, action) => {\n  return {\n    ...state,\n    toastMessage: action.payload,\n  };\n};","import isNaN from 'lodash/isNaN';\n\nconst precision = (a) => {\n  if (!isFinite(a)) return 0;\n  let e = 1, p = 0;\n  while (Math.round(a * e) / e !== a) { e *= 10; p++; }\n  return p;\n}\n\nexport const formatMax2Decimal = (n) => {\n  const num = parseFloat(n);\n\n  if (isNaN(num)) {\n    return '0';\n  }\n\n  if (precision(num) > 2) {\n    return num.toFixed(2);\n  }\n\n  return n.toString();\n};","import React from 'react';\nimport PropTypes from 'react-proptypes';\nimport MdKeyboardArrowDown from 'react-icons/lib/md/keyboard-arrow-down';\nimport getSymbolFromCurrency from 'currency-symbol-map'\nimport ContentEditable from 'react-contenteditable'\nimport striphtml from 'string-strip-html';\nimport { formatMax2Decimal } from '../helpers/formatNumber';\n\nexport const CurrencyComponent = (props) => {\n  const balance = formatMax2Decimal(props.wallet ? props.wallet.balance : 0);\n  const symbol = getSymbolFromCurrency(props.currency) || props.currency;\n  const handleChange = (event) => props.onChange(parseFloat(striphtml(event.target.value) || 0));\n  const handleCurrencyClick = () => props.onCurrencyClick(props.buy ? 'buy' : 'sell', props.currency);\n  const amount = formatMax2Decimal(props.amount);\n  const notEnoughBalance = !props.buy && (props.wallet ? props.wallet.balance : 0) < amount;\n\n  return (\n    <div className={`currency ${props.buy ? 'currency-buy' : 'currency-sell'}`}>\n      <div className=\"currency-name\" onClick={handleCurrencyClick}>\n        {props.currency}<MdKeyboardArrowDown/>\n        <div className={`currency-exchange-balance ${notEnoughBalance ? 'currency-exchange-balance-warning' : ''}`}>\n        Balance: {`${symbol}${balance}`}</div>\n      </div>\n      <ContentEditable\n        className={`currency-input currency-input-${props.buy ? 'buy' : 'sell'}`}\n        html={amount}\n        onChange={handleChange} />\n    </div>\n  );\n};\n\nCurrencyComponent.propTypes = {\n  currency: PropTypes.string,\n  amount: PropTypes.number,\n  onChange: PropTypes.func,\n  wallet: PropTypes.shape({\n    balance: PropTypes.number,\n  }),\n  onCurrencyClick: PropTypes.func,\n  buy: PropTypes.bool,\n};","import React, { Component } from 'react';\nimport PropTypes from 'react-proptypes';\nimport { List, ListItem, ListItemContent, ListItemAction } from 'react-mdl/lib/List';\nimport { Dialog, DialogTitle } from 'react-mdl/lib/Dialog';\nimport Icon from 'react-icons/lib/md/dashboard';\nimport MdCheck from 'react-icons/lib/md/check';\nimport FaGlobe from 'react-icons/lib/fa/globe';\nimport { formatMax2Decimal } from '../helpers/formatNumber';\n\nconst CurrencyItem = (props) => {\n  return (\n    <ListItem      \n      onClick={props.onClick}\n      className={`currency-list-item ${props.selected ? 'currency-list-item-selected' : ''}`}\n      >\n      <ListItemContent icon={<Icon/>}>{`${props.currency} · ${formatMax2Decimal(props.balance)}`}</ListItemContent>\n      <ListItemAction>\n      {props.selected && <MdCheck />}\n      </ListItemAction>\n    </ListItem>\n  );\n};\n\nCurrencyItem.propTypes = {\n  currency: PropTypes.string,\n  balance: PropTypes.number,\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nexport class CurrencyListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      other: false,\n      open: props.open,\n    };\n  }\n\n  static propTypes = {\n    open: PropTypes.bool,\n    currentCurrency: PropTypes.string,\n    wallet: PropTypes.arrayOf(PropTypes.shape({\n      currency: PropTypes.string,\n      balance: PropTypes.number,\n    })),\n    buyOrSell: PropTypes.oneOf(['buy', 'sell']),\n    availableCurrencies: PropTypes.arrayOf(PropTypes.string),\n    onCurrencyChange: PropTypes.func,\n  }\n\n  onCurrencyClick = (buyOrSell, currency) => {\n    return () => {\n      this.props.onCurrencyChange(buyOrSell, currency);\n      this.setState({\n        other: false,\n      });\n    }\n  }\n\n  onOtherClick = () => {\n    this.setState({\n      open: false,\n    }, () => this.setState({ open: true, other: !this.state.other}));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      open: nextProps.open,\n    });\n  }\n\n  render() {\n    return (\n      <Dialog open={this.state.open}>\n        <DialogTitle><span className=\"currency-list-title\">Choose currency:</span></DialogTitle>\n        <List className=\"currency-list\">\n          {this.props.wallet.map(currency => {\n            return (\n              <CurrencyItem\n                {...currency}\n                selected={currency.currency === this.props.currentCurrency}\n                key={currency.currency}\n                onClick={this.onCurrencyClick(this.props.buyOrSell, currency.currency)}              \n                />              \n            );\n          })}\n          <ListItem className=\"currency-list-item currency-list-item-other\" onClick={this.onOtherClick}>\n            <ListItemContent icon={<FaGlobe/>}>Other</ListItemContent>\n          </ListItem>\n          {this.state.other && this.props.availableCurrencies.map(currency =>{\n            return (\n              <CurrencyItem\n                currency={currency}\n                balance={0}\n                selected={currency === this.props.currentCurrency}\n                key={currency}\n                onClick={this.onCurrencyClick(this.props.buyOrSell, currency)}              \n                /> \n            );\n          })}\n        </List>\n      </Dialog>\n    ); \n  };\n};","import React from 'react';\nimport PropTypes from 'react-proptypes';\nimport MdClose from 'react-icons/lib/md/close';\nimport { CurrencyComponent } from './CurrencyComponent';\nimport { CurrencyListComponent } from './CurrencyListComponent';\nimport MdTrendingUp from 'react-icons/lib/md/trending-up';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/actions';\nimport Button from 'react-mdl/lib/Button';\nimport find from 'lodash/find';\nimport MdSwapVert from 'react-icons/lib/md/swap-vert';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport { getExchangeRate } from '../helpers/getExchangeRate';\nimport Snackbar from 'react-mdl/lib/Snackbar';\n\nconst noop = () => {};\n\nexport const WidgetLayoutComponent = (props) => {\n  const buySymbol =  getSymbolFromCurrency(props.buy.currency) || props.buy.currency;\n  const sellSymbol = getSymbolFromCurrency(props.sell.currency) || props.sell.currency;\n  return (\n    <div className=\"currency-exchange-widget\" style={{ height: props.height, width: props.width}}>\n      <div className=\"currency-exchange-widget-top\">\n      <div style={{fontSize: '15px'}}>\n        <MdClose /> Exchange\n      </div>\n      <div className=\"trending-button\">\n        <MdTrendingUp />\n      </div>\n      </div>\n      <CurrencyComponent\n        amount={props.sell.amount}\n        currency={props.sell.currency}\n        onChange={props.onSellAmountChange}\n        wallet={props.sellWallet}\n        onCurrencyClick={props.onShowCurrencyClick}\n        sell\n      />\n      <div className=\"divider\">\n        <div className=\"currency-swap\" onClick={props.onSwapClick}>\n          <MdSwapVert />\n        </div>\n        <div className=\"exchange-rate\">&nbsp;&nbsp;&nbsp;<MdTrendingUp />&nbsp;{`${sellSymbol}1 = ${buySymbol}${props.currentRate.toFixed(4)}`}&nbsp;&nbsp;&nbsp;</div>\n        <div style={{height: '25px', width: '25px', margin: '0 15px'}}/>\n      </div>\n      <CurrencyComponent\n        amount={props.buy.amount}\n        currency={props.buy.currency}\n        onChange={props.onBuyAmountChange}\n        wallet={props.buyWallet}\n        onCurrencyClick={props.onShowCurrencyClick}\n        buy\n      />\n      <div className=\"button-area\">\n        <Button\n          disabled={props.exchangeDisabled}\n          raised\n          accent\n          className=\"button-exchange\"\n          onClick={props.onExchangeClick}>\n          Exchange\n        </Button>\n      </div>\n      <CurrencyListComponent\n        {...props.changeCurrencyDialog}\n        onCurrencyChange={props.onCurrencyChange}\n        wallet={props.wallet}\n        availableCurrencies={props.availableCurrencies}/>\n\n      <Snackbar active={!!props.toastMessage} onTimeout={noop}>{props.toastMessage}</Snackbar>\n    </div>\n  );\n};\n\nWidgetLayoutComponent.propTypes = {\n    sell: PropTypes.shape({ currency: PropTypes.string, amount: PropTypes.number }),\n    buy: PropTypes.shape({ currency: PropTypes.string, amount: PropTypes.number }),\n    sellWallet: PropTypes.shape({ currency: PropTypes.string, balance: PropTypes.number }),\n    buyWallet: PropTypes.shape({ currency: PropTypes.string, balance: PropTypes.number }),\n    exchangeDisabled: PropTypes.bool,\n    currentRate: PropTypes.number,\n    changeCurrencyDialog: PropTypes.shape({\n      open: PropTypes.bool,\n      buyOrSell: PropTypes.oneOf(['buy', 'sell']),\n      currentCurrency: PropTypes.string,\n    }),\n    wallet: PropTypes.arrayOf(PropTypes.shape({ currency: PropTypes.string, amount: PropTypes.number })),\n    availableCurrencies: PropTypes.arrayOf(PropTypes.string),\n    toastMessage: PropTypes.string,\n    onSellAmountChange: PropTypes.func,\n    onBuyAmountChange: PropTypes.func,\n    onExchangeClick: PropTypes.func,\n    onSwapClick: PropTypes.func,\n    onShowCurrencyClick: PropTypes.func,\n    onCurrencyChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  const sellWallet = find(state.wallet, a => a.currency === state.selectedExchangeCurrencies.sell.currency) || { currency: state.selectedExchangeCurrencies.sell.currency, balance: 0 };\n  const buyWallet = find(state.wallet, a => a.currency === state.selectedExchangeCurrencies.buy.currency) || { currency: state.selectedExchangeCurrencies.buy.currency, balance: 0 };\n\n  return {\n    sell: state.selectedExchangeCurrencies.sell,\n    buy: state.selectedExchangeCurrencies.buy,\n    sellWallet,\n    buyWallet,\n    exchangeDisabled: sellWallet.balance === 0 || sellWallet.balance < state.selectedExchangeCurrencies.sell.amount,\n    currentRate: getExchangeRate(state.selectedExchangeCurrencies.sell.currency, state.selectedExchangeCurrencies.buy.currency, state.currencyRates),\n    changeCurrencyDialog: state.changeCurrencyDialog,\n    wallet: state.wallet,\n    availableCurrencies: Object.keys(state.currencyRates.rates),\n    toastMessage: state.toastMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSellAmountChange: (value) => dispatch(actions.currencyFromAmountAction(value)),\n    onBuyAmountChange: (value) => dispatch(actions.currencyTomountAction(value)),\n    onExchangeClick: () => dispatch(actions.exchangeAction()),\n    onSwapClick: () => dispatch(actions.swapCurrencyAction()),\n    onShowCurrencyClick: (buyOrSell, currencyCurrency) => dispatch(actions.showChangeCurrencyAction(buyOrSell, currencyCurrency)),\n    onCurrencyChange: (buyOrSell, currency) => dispatch(actions.changeCurrencyAction(buyOrSell, currency)),\n  };\n};\n\nexport const WidgetLayoutConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WidgetLayoutComponent);\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { WidgetLayoutConnected } from './components/WidgetLayoutComponent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <WidgetLayoutConnected height=\"calc(100vh)\" width=\"calc(100vw)\" />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}